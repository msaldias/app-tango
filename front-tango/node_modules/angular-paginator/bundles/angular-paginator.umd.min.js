!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-paginator",["exports","@angular/core","@angular/common"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["angular-paginator"]={},e.ng.core,e.ng.common)}(this,(function(e,t,a){"use strict";var n=function(){function e(){this.id="ANGULAR_PAGINATOR_DEFAULT",this.instances={},this.change=new t.EventEmitter}return e.prototype.registerInstance=function(e){this.instances[e.id]?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){for(var t in e)if(e[t]!==this.instances[e.id][t])return this.instances[e.id][t]=e[t],!0;return!1},e.prototype.getInstance=function(e){return this.instances[e]},e.prototype.getCurrentPage=function(e){return this.instances[e].currentPage},e}();n.decorators=[{type:t.Injectable}],n.ctorParameters=function(){return[]};var i=function(){function e(e){this.angularPaginatorService=e,this.boundaryLinks=!1,this.directionLinks=!0,this.maxSize=5,this.rotate=!0,this.boundaryLinkNumbers=!1,this.forceEllipses=!1,this.firstText="First",this.previousText="Previous",this.nextText="Next",this.lastText="Last",this.screenReaderFirstText="First",this.screenReaderPreviousText="Previous",this.screenReaderNextText="Next",this.screenReaderLastText="Last",this.screenReaderPageText="Page",this.screenReaderCurrentPageText="You`re on page",this.screenReaderPaginationLabel="Pagination",this.autoHide=!1,this.disabled=!1,this.pageChange=new t.EventEmitter}return e.prototype.ngOnInit=function(){this.id=this.id?this.id:this.angularPaginatorService.id,this.className=this.className?this.className:this.angularPaginatorService.id},e}();i.decorators=[{type:t.Component,args:[{selector:"angular-paginator",template:'<angularPaginator [id]="id" [boundaryLinks]="boundaryLinks" [directionLinks]="directionLinks" [maxSize]="maxSize"\n  [rotate]="rotate" [boundaryLinkNumbers]="boundaryLinkNumbers" [forceEllipses]="forceEllipses" #paginator="angularPaginator"\n  (pageChange)="pageChange.emit($event)">\n\n  \x3c!-- ======================================== BOOTSTRAP 4 TEMPLATE ======================================== --\x3e\n  <ng-container *ngIf="!(autoHide && paginator.pages[\'length\'] <= 1)">\n    <nav class="angular-bs4-pagination" [attr.aria-label]="screenReaderPaginationLabel">\n\n      <ng-container *ngIf="paginator.pages[\'length\'] !== 0">\n        <ul class="pagination" [ngClass]="className">\n\n          \x3c!-- boundary link --\x3e\n          <li class="page-item" *ngIf="boundaryLinks" (click)="paginator.toFirstPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.firstPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="firstText"></span>\n              <span class="sr-only">{{ screenReaderFirstText }}</span>\n            </a>\n          </li>\n\n          \x3c!-- direction link --\x3e\n          <li class="page-item" *ngIf="directionLinks" (click)="paginator.toPreviousPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.firstPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="previousText"></span>\n              <span class="sr-only">{{ screenReaderPreviousText }}</span>\n            </a>\n          </li>\n\n          \x3c!-- pagination array --\x3e\n          <li class="page-item" *ngFor="let page of paginator.pages" [ngClass]="{\'active\': page[\'active\'], \'disabled\': disabled}"\n            (click)="!page[\'active\'] && paginator.setCurrentPage(page[\'number\'])">\n            <a href="javascript:void(0)" class="page-link">\n              {{ page[\'text\'] }}\n              <span class="sr-only" *ngIf="!page[\'active\']">{{ screenReaderPageText + \' \' }}{{ page[\'text\'] }}</span>\n              <span class="sr-only" *ngIf="page[\'active\']">{{ screenReaderCurrentPageText + \' \' }}{{ page[\'text\'] }}</span>\n            </a>\n          </li>\n\n          \x3c!-- direction link --\x3e\n          <li class="page-item" *ngIf="directionLinks" (click)="paginator.toNextPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.lastPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="nextText"></span>\n              <span class="sr-only">{{ screenReaderNextText }}</span>\n            </a>\n          </li>\n\n          \x3c!-- boundary link --\x3e\n          <li class="page-item" *ngIf="boundaryLinks" (click)="paginator.toLastPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.lastPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="lastText"></span>\n              <span class="sr-only">{{ screenReaderLastText }}</span>\n            </a>\n          </li>\n\n        </ul>\n      </ng-container>\n\n    </nav>\n  </ng-container>\n\n</angularPaginator>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".angular-bs4-pagination .disabled{pointer-events:none}"]}]}],i.ctorParameters=function(){return[{type:n}]},i.propDecorators={boundaryLinks:[{type:t.Input}],directionLinks:[{type:t.Input}],maxSize:[{type:t.Input}],rotate:[{type:t.Input}],boundaryLinkNumbers:[{type:t.Input}],forceEllipses:[{type:t.Input}],id:[{type:t.Input}],firstText:[{type:t.Input}],previousText:[{type:t.Input}],nextText:[{type:t.Input}],lastText:[{type:t.Input}],screenReaderFirstText:[{type:t.Input}],screenReaderPreviousText:[{type:t.Input}],screenReaderNextText:[{type:t.Input}],screenReaderLastText:[{type:t.Input}],screenReaderPageText:[{type:t.Input}],screenReaderCurrentPageText:[{type:t.Input}],screenReaderPaginationLabel:[{type:t.Input}],className:[{type:t.Input}],autoHide:[{type:t.Input}],disabled:[{type:t.Input}],pageChange:[{type:t.Output}]};var r=function(){function e(e){this.angularPaginatorService=e}return e.prototype.transform=function(e,t){var a=this.createInstance(e,t);this.angularPaginatorService.registerInstance(a);var n=(a.currentPage-1)*a.itemsPerPage,i=a.currentPage*a.itemsPerPage;return e.slice(n,i)},e.prototype.createInstance=function(e,t){return{id:t.id?t.id:this.angularPaginatorService.id,currentPage:t.currentPage?t.currentPage:1,itemsPerPage:t.itemsPerPage?t.itemsPerPage:10,totalItems:e.length}},e}();r.decorators=[{type:t.Pipe,args:[{name:"angularPaginator"}]}],r.ctorParameters=function(){return[{type:n}]};var s=function(){function e(e){var a=this;this.angularPaginatorService=e,this.firstPage=1,this.pages=[],this.pageChange=new t.EventEmitter(!0),this.subscription=this.angularPaginatorService.change.subscribe((function(e){e===a.id&&a.updatePages()}))}return e.prototype.toPreviousPage=function(){this.currentPage>this.firstPage&&this.setCurrentPage(this.currentPage-1)},e.prototype.toNextPage=function(){this.currentPage<this.lastPage&&this.setCurrentPage(this.currentPage+1)},e.prototype.toFirstPage=function(){this.setCurrentPage(this.firstPage)},e.prototype.toLastPage=function(){this.setCurrentPage(this.lastPage)},e.prototype.setCurrentPage=function(e){e&&this.currentPage!==e&&(this.currentPage=e,this.pageChange.emit(e))},e.prototype.makePage=function(e,t,a){return{number:e,text:t,active:a}},e.prototype.getPages=function(e,t,a){var n=[],i=this.lastPage=Math.ceil(a/t),r=1,s=i,o=this.maxSize&&this.maxSize<i;o&&(this.rotate?(s=(r=Math.max(e-Math.floor(this.maxSize/2),1))+this.maxSize-1)>i&&(r=(s=i)-this.maxSize+1):(r=(Math.ceil(e/this.maxSize)-1)*this.maxSize+1,s=Math.min(r+this.maxSize-1,i)));for(var g=r;g<=s;g++){var u=this.makePage(g,g,g===e);n.push(u)}if(o&&this.maxSize>0&&(!this.rotate||this.forceEllipses||this.boundaryLinkNumbers)){if(r>1){if(!this.boundaryLinkNumbers||r>3){var p=this.makePage(r-1,"...",!1);n.unshift(p)}if(this.boundaryLinkNumbers){if(3===r){var c=this.makePage(2,"2",!1);n.unshift(c)}var l=this.makePage(1,"1",!1);n.unshift(l)}}if(s<i){if(!this.boundaryLinkNumbers||s<i-2){var h=this.makePage(s+1,"...",!1);n.push(h)}if(this.boundaryLinkNumbers){if(s===i-2){var d=this.makePage(i-1,i-1,!1);n.push(d)}var P=this.makePage(i,i,!1);n.push(P)}}}return n},e.prototype.updatePages=function(){var e=this.angularPaginatorService.getInstance(this.id),t=this.outOfBoundCorrection(e);t===e.currentPage&&this.currentPage===e.currentPage||this.setCurrentPage(t),this.pages=this.getPages(e.currentPage,e.itemsPerPage,e.totalItems)},e.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},e.prototype.isValidId=function(){if(!this.angularPaginatorService.getInstance(this.id))throw new Error("There is no instance registered with id `"+this.id+"`")},e.prototype.ngOnInit=function(){this.isValidId(),this.updatePages()},e.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},e}();s.decorators=[{type:t.Directive,args:[{selector:"angularPaginator, [angularPaginator]",exportAs:"angularPaginator"}]}],s.ctorParameters=function(){return[{type:n}]},s.propDecorators={boundaryLinks:[{type:t.Input}],directionLinks:[{type:t.Input}],maxSize:[{type:t.Input}],rotate:[{type:t.Input}],boundaryLinkNumbers:[{type:t.Input}],forceEllipses:[{type:t.Input}],id:[{type:t.Input}],pageChange:[{type:t.Output}]};var o=function(){};o.decorators=[{type:t.NgModule,args:[{imports:[a.CommonModule],providers:[n],declarations:[i,r,s],exports:[i,r]}]}],e.AngularPaginatorComponent=i,e.AngularPaginatorModule=o,e.AngularPaginatorPipe=r,e.ɵa=n,e.ɵb=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-paginator.umd.min.js.map